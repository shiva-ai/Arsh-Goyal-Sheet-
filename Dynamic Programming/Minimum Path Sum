class Solution {
public:
    
    int fun(int i , int j , vector<vector<int>>& grid , vector<vector<int>>& memo){
        int m = grid.size() , n = grid[0].size() ;
        
        if(i<0 || i >= m || j < 0 || j>= n) return INT_MAX - 200 ;
        if(i == m-1 && j == n-1) return grid[i][j] ;
        
        if(memo[i][j] != -1) return memo[i][j] ;
        
        return memo[i][j] = grid[i][j] + min(fun(i+1 , j , grid , memo) , fun(i , j+1 , grid , memo) ) ;
    }
    
    int minPathSum(vector<vector<int>>& grid) {
        
        vector<vector<int>> memo(205 , vector<int>(205 , -1)) ;
        return fun(0 , 0 , grid , memo) ;
    }
};
