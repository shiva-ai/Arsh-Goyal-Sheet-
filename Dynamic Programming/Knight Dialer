class Solution {
public:
    
    long mod = 1e9 + 7 ;
    
    long t[4][3][5005] ;
    
    long fun(int i , int j , int n){
        if(i < 0 || i >= 4 || j < 0 || j >= 3 || (i == 3 && j != 1) ) return 0 ;
    
        if(n == 1) return 1 ;
        
        if(t[i][j][n]) return t[i][j][n] ;
        
        return t[i][j][n] =  fun(i+1 , j +2 , n-1)%mod 
            + fun(i+1 , j-2 , n-1)%mod + fun(i+2 , j+1, n-1)%mod + fun(i+2 , j -1 , n-1)%mod
            + fun(i-2 , j+1 , n-1)%mod + fun(i-2, j -1 , n-1)%mod + fun(i-1 , j +2 , n-1)%mod
            + fun(i-1,j-2 , n-1)%mod ;
    }
    
    int knightDialer(int n) {
        long res = 0 ;
        
        for(int i = 0 ; i < 4 ; i++){
            for(int j = 0 ; j < 3 ; j++){
                res = (res + fun(i , j , n))%mod ;
            }
        }
        
        return (int)res ;
    }
};
