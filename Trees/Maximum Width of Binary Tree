/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode* , long long >> q ;
        q.push({root , 1}) ;
        
        int ans = 0 ;
        
        long long MOD = 1e9 +7 ;
        
        while(!q.empty()){
            int s = q.size() ;
            ans = max(ans , int(q.back().second - q.front().second + 1));
            
            while(s--){
                TreeNode* curr = q.front().first ; 
                long long  i = q.front().second ;
                q.pop() ;
                if(curr->left != NULL){
                    q.push({curr->left , (i*2)%MOD}) ;
                }
                if(curr->right != NULL){
                    q.push({curr->right , (i*2 + 1)%MOD}) ;
                }
            }
        }
        return (int)ans ;
    }
};
