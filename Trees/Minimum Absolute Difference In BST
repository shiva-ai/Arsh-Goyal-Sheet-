/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void fun(TreeNode* root , vector<int>& v){
        if(root == NULL) return ;
        fun(root->left , v) ;
        
        v.push_back(root->val) ;
        
        fun(root->right , v) ;
    }
    
    int getMinimumDifference(TreeNode* root) {
        vector<int> v ;
        fun(root , v) ;
        
        int res = abs(v[1] - v[0]) ;
        
        for(int i = 1 ; i < v.size() - 1 ; i++){
            int val = min(abs(v[i] - v[i+1]) , abs(v[i] - v[i-1])) ;
            res = min(res , val) ;
        }
        
        return res ;
    }
};
