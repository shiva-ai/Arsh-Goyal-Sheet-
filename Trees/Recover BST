/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void fun(TreeNode* root , vector<int>& v ){
        if(root == NULL) return ;
        fun(root->left , v) ;
        v.push_back(root->val) ;
        fun(root->right , v) ;
    }
    
    int i = 0 ;
    
    void tra(TreeNode* root , vector<int>& v ){
        if(root == NULL) return ;
        tra(root->left , v ) ;
        root->val = v[i++] ;
        tra(root->right , v ) ; 
    }
    
    void recoverTree(TreeNode* root) {
        vector<int> v ;
        fun(root , v) ;
    
        sort(v.begin() , v.end()) ;
        
        tra(root , v ) ;
    }
};
