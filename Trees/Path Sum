/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        
        if(root == NULL) return false ;
        
     queue<int> sum ;
    queue<TreeNode*> q ;
        
        q.push(root) ;
        sum.push(root->val) ;
        
        while(q.size()){
            int s = q.size() ;
            
            for(int i = 0 ; i < s ; i++){
                TreeNode* curr = q.front() ;
                int x = sum.front() ;
                
                q.pop() ;
                sum.pop() ;
                
                if(curr->left == NULL && curr->right == NULL){
                    if(x == targetSum) return true ;
                }
                
                if(curr->left){
                    q.push(curr->left) ;
                    sum.push(x+(curr->left->val)) ;
                } 
                
                if(curr->right){
                    q.push(curr->right) ;
                    sum.push(x+ (curr->right->val)) ;
                }
            }
        }
        return false ;
    }
};
